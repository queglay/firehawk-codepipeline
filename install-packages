#!/bin/bash

echo "Installing packages for AWS cloud shell"

terraform_version="1.1.7"
terragrunt_version="0.36.0"

set -e
# set -x

# aws sts get-caller-identity

SOURCE=${BASH_SOURCE[0]} # resolve the script dir even if a symlink is used to this script
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTDIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
cd $SCRIPTDIR

SUDOCMD="sudo" # replace with text sudo to use elevated permissions

$SUDOCMD yum install -y jq openssl
# $SUDOCMD yum install -y python python3.7 python3-pip # for a specific python version - https://realpython.com/intro-to-pyenv/
mkdir -p $SCRIPTDIR/tmp

if terraform --version 2> /dev/null | grep -nq "Terraform v$terraform_version"; then
    echo 'Terraform already installed'
else
    wget https://releases.hashicorp.com/terraform/$terraform_version/terraform_${terraform_version}_linux_amd64.zip -P /tmp/ --quiet # Get terraform
    $SUDOCMD unzip /tmp/terraform_${terraform_version}_linux_amd64.zip -d /tmp/
    $SUDOCMD mv /tmp/terraform /usr/local/bin/.
fi

if terragrunt --version 2> /dev/null | grep -nq "terragrunt version v$terragrunt_version"; then
    echo 'Terragrunt already installed'
else
    wget https://github.com/gruntwork-io/terragrunt/releases/download/v$terragrunt_version/terragrunt_linux_386 -P /tmp/ --quiet # Get Terragrunt
    $SUDOCMD mv /tmp/terragrunt_linux_386 /usr/local/bin/terragrunt
    $SUDOCMD chmod +x /usr/local/bin/terragrunt
fi

mkdir -p "$HOME/.ssh/tls" # The directory to store TLS certificates in.

# echo "Resizing EBS volume..."
# $SCRIPTDIR/deploy/firehawk-main/scripts/resize.sh