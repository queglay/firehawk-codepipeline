#!/bin/bash

# defaults
resourcetier="dev"
export TF_VAR_resourcetier="$resourcetier"

set -e

aws sts get-caller-identity

SOURCE=${BASH_SOURCE[0]} # resolve the script dir even if a symlink is used to this script
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTDIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
cd $SCRIPTDIR

dirname=${SCRIPTDIR##*/}
targetdir="/aws/mde/tmp"

echo "pwd: $PWD"
git pull origin
./gitpullrecursive --init-all

app/modules/firehawk/scripts/diskspace_check

sudo mkdir -p $targetdir
sudo chown $USER:$USER $targetdir
sudo chmod +rwX $targetdir
if [[ -d "$targetdir/$dirname" ]]; then # clean dir if exist
  rm -fr "$targetdir/$dirname"
fi
cp -fr $SCRIPTDIR $targetdir/.

cd $targetdir/$dirname

$targetdir/$dirname/install-packages

# check existance of ssm parameter for git_repo_id.  Required.
get_parameters=$( aws ssm get-parameters --names \
  "/firehawk/resourcetier/${TF_VAR_resourcetier}/git_repo_id" )
num_invalid=$(echo $get_parameters | jq '.InvalidParameters| length')
changed="false"
regex="[0-9a-zA-Z]+[/][0-9a-zA-Z]+"

ask="false"

if [[ ! $num_invalid -eq 0 ]]; then
  ask="true"
  echo ""
  echo "SSM parameter not yet set"
  echo "You must set the SSM parameter for /firehawk/resourcetier/${TF_VAR_resourcetier}/git_repo_id"
else
  git_repo_id=$(echo $get_parameters | jq ".Parameters[]| select(.Name == \"/firehawk/resourcetier/${TF_VAR_resourcetier}/git_repo_id\")|.Value" --raw-output)
  if [[ ! $git_repo_id =~ $regex ]]; then
    echo ""
    echo "Present SSM Parameter format of value git_repo_id is incorrect or not set.  value: $git_repo_id"
    echo "get_parameters: $get_parameters"
    echo "Should be of formate example: mygitusername/firehawk"
    ask="true"
  fi
fi

if [[ "$ask" == "true" ]]; then
  echo ""
  echo "You must have your own fork of firehawkvfx/firehawk in github to continue to trigger automation within your control."
  echo "Ensure you have made your own fork of github.com/firehawkvfx/firehawk and continue."
  echo ""
  echo "Specify the git repo id of your fork from firehawkvfx/firehawk (Public repos are tested, private repos are not tested):"
  read -p "Enter git repo id (eg: mygitusername/firehawk) : " git_repo_id
  echo ""
  
  while [[ ! "$git_repo_id" =~ "$regex" ]]; do
    echo "Format is incorrect.  eg: mygitusername/firehawk"
    read -p "Enter git repo id (eg: mygitusername/firehawk) : " git_repo_id
    echo ""
  done
  changed="true"
fi

if [[ "$changed" == "true" ]]; then;
  echo "...Setting git_repo_id: $git_repo_id"
  aws ssm put-parameter \
      --name "/firehawk/resourcetier/${TF_VAR_resourcetier}/git_repo_id" \
      --description "The ID of your git repo fork of firehawk. eg: mygitusername/firehawk" \
      --value "$git_repo_id" \
      --type "String" \
      --tier Advanced
fi

source $targetdir/$dirname/update_vars.sh --resourcetier $resourcetier
$targetdir/$dirname/init/init-aws-shell